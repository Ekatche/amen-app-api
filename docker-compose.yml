version: "3.9"

services:
  app:
    build:
      context: .
      args:
        - DEV=true
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    env_file:
      - ./.env.dev.txt
    depends_on:
      - redis
      - db
      - elasticsearch
      - pgadmin


  elasticsearch:
    container_name: search
    image: elasticsearch:7.17.7
    env_file:
      - ./.env.dev.txt
    ports:
      - "9200:9200"
    volumes:
      - ./elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    environment:
      - ELASTICSEARCH_PORT=9200

  db:
    image: postgres:13-alpine
    container_name: local_db
    volumes:
      - dev-db-data:/var/lib/postgresql/data
    env_file:
      - ./.env.dev.txt
    ports:
      - "5432:5432"

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    env_file:
      - ./.env.dev.txt
    ports:
      - "5050:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    links:
      - "db:pgsql-server"

  redis:
    container_name: redis
    restart: always
    image: redis:alpine
    ports:
        - "6379:6379"

  celery:
    container_name: celery_ecommerce_amen
    restart: always
    build:
      context: .
    command: celery -A config worker -l info
    volumes:
      - ./app:/app
    env_file:
      - ./.env.dev.txt
    depends_on:
      - redis
      - db
      - app

  celery-beat:
    container_name: celery_beat_ecommerce_amen
    restart: always
    build:
      context: .
    command: celery -A config beat -l info
    depends_on:
      - redis
      - celery
    volumes:
      - ./app:/app

  flower:
    container_name: flower_ecommerce
    image: mher/flower
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - FLOWER_PORT=8888
    ports:
      - "8888:8888"

volumes:
  dev-db-data:
  pgadmin-data:

